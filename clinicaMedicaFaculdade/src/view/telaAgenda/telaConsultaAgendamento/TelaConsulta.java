/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.telaAgenda.telaConsultaAgendamento;

import contoller.AgendamentoController;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import view.telaAgenda.telaAgendamento.TelaAgendamento;


public class TelaConsulta extends javax.swing.JFrame {


    private AgendamentoController agendamentoController;
    private Date dataAgendamento;
    private TelaAgendamento agendamentoView;
    private String[][] linhasMatriz;
    
    
    public TelaConsulta() {
        initComponents();
        agendamentoController = new AgendamentoController();
        String[][] matrizAgendamentosWrappers;
        agendamentoView = new TelaAgendamento();
        
               
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTituloMedico1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        inputPesquisaAgenda = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        calendarDataAgendamento = new com.toedter.calendar.JDateChooser();
        btnLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAgendamentosConsulta = new javax.swing.JTable();
        btnSair = new javax.swing.JButton();
        btnVisualizar = new javax.swing.JButton();
        txtTituloMedico2 = new javax.swing.JLabel();

        txtTituloMedico1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        txtTituloMedico1.setText("Agendamento");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/topo.png"))); // NOI18N
        jLabel2.setToolTipText("");

        btnPesquisar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        calendarDataAgendamento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendarDataAgendamentoPropertyChange(evt);
            }
        });

        btnLimpar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        tabelaAgendamentosConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome", "Data de Nascimento", "Horário", "Data da Consulta", "Médico", "Consultório"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAgendamentosConsulta.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelaAgendamentosConsulta);

        btnSair.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnVisualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnVisualizar.setText("Visualizar");
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        txtTituloMedico2.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        txtTituloMedico2.setText("Agenda");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSair)
                .addGap(41, 41, 41)
                .addComponent(btnVisualizar)
                .addGap(102, 102, 102))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(calendarDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(btnLimpar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputPesquisaAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 929, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(btnPesquisar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTituloMedico2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTituloMedico2)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputPesquisaAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(calendarDataAgendamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpar))
                .addGap(70, 70, 70)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(btnVisualizar))
                .addGap(0, 78, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
       
    public void preencheTabela(String[][] matrizAgendamentosWrappers) {
        
       DefaultTableModel modelo = (DefaultTableModel) this.tabelaAgendamentosConsulta.getModel();
       modelo.setNumRows(0);

       for (int i = 0; i < matrizAgendamentosWrappers.length; i++) {
           modelo.addRow(new Object[]{
           matrizAgendamentosWrappers[i][0],
           matrizAgendamentosWrappers[i][1],
           matrizAgendamentosWrappers[i][2],
           matrizAgendamentosWrappers[i][3],
           matrizAgendamentosWrappers[i][4],
           matrizAgendamentosWrappers[i][5]
           });
       }
    }
    
    private void atualizaTabela() {
        dataAgendamento = calendarDataAgendamento.getDate(); 
        
        String inputPesquisa = this.inputPesquisaAgenda.getText();
     
        String[][] linhasMatriz = agendamentoController.getAgendamentosByDateConsulta(inputPesquisa, dataAgendamento);
        if (linhasMatriz.length > 0) {
            preencheTabela(linhasMatriz);
            this.linhasMatriz = linhasMatriz;
        } 
        else {
            limpaTabela();
        }
    }
    
    private void limpaTabela() {
        // inicializa a matriz  com strings vazias.
        String[][] matrizVazia = new String[10][7];
        
        // fazer "for" que passa por todas as linhas e seta uma String vazia na  coluna.
        for (int i = 0; i< matrizVazia.length; i++) {
           matrizVazia[i][0] = "";
           matrizVazia[i][1] = "";
           matrizVazia[i][2] = "";
           matrizVazia[i][3] = "";
           matrizVazia[i][4] = "";
           matrizVazia[i][5] = "";
           matrizVazia[i][6] = "";
        }
        preencheTabela(matrizVazia);
    }
    
    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        atualizaTabela();       
    }//GEN-LAST:event_btnPesquisarActionPerformed
    
    private void calendarDataAgendamentoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendarDataAgendamentoPropertyChange
        if (calendarDataAgendamento.getDate() == null) {
            return;
        }
        atualizaTabela();
    }//GEN-LAST:event_calendarDataAgendamentoPropertyChange

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnSairActionPerformed
    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
       
        if (this.tabelaAgendamentosConsulta.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Selecione um paciente");
            return;
        }
        
        int rowIdx = this.tabelaAgendamentosConsulta.getSelectedRow();
        
        String nome = linhasMatriz[rowIdx][0];
        String dataNascimento = linhasMatriz[rowIdx][1];
        String horario = linhasMatriz[rowIdx][2];
        String dataAgendamento = linhasMatriz[rowIdx][3];
        String medico = linhasMatriz[rowIdx][4];
        String consultorio = linhasMatriz[rowIdx][5];
        String idAgendamento = linhasMatriz[rowIdx][6]; 
        String idPaciente = linhasMatriz[rowIdx][7];
        
        int idAgendamentoConsulta = Integer.parseInt(idAgendamento);
        int idInt = Integer.parseInt(idPaciente);

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
//        Time horarioAgendamento = Time.valueOf(horario);
         
        Date dataConsulta = null;
        try {
            dataConsulta = formatter.parse(dataAgendamento);
            agendamentoView.recebeDadosPaciente(nome, dataNascimento, horario, dataConsulta, medico, consultorio, idAgendamentoConsulta, idInt);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        agendamentoView.mostrarTela(true);
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        calendarDataAgendamento.setDate(null);
        atualizaTabela();
    }//GEN-LAST:event_btnLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConsulta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConsulta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnVisualizar;
    private com.toedter.calendar.JDateChooser calendarDataAgendamento;
    private javax.swing.JTextField inputPesquisaAgenda;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaAgendamentosConsulta;
    private javax.swing.JLabel txtTituloMedico1;
    private javax.swing.JLabel txtTituloMedico2;
    // End of variables declaration//GEN-END:variables
}
